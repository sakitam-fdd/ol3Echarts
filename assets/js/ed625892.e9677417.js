"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[34],{8584:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var r=t(6106),o=t(2036);const s={id:"track-line",title:"\u676d\u5dde\u70ed\u95e8\u6b65\u884c\u8def\u7ebf"},a=void 0,c={id:"playgrounds/track-line",title:"\u676d\u5dde\u70ed\u95e8\u6b65\u884c\u8def\u7ebf",description:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",source:"@site/docs/playgrounds/track-line.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/track-line",permalink:"/ol-echarts/docs/playgrounds/track-line",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/track-line.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730471033e3,frontMatter:{id:"track-line",title:"\u676d\u5dde\u70ed\u95e8\u6b65\u884c\u8def\u7ebf"},sidebar:"docs",previous:{title:"\u5609\u5174\u5e02\u516c\u4ea4\u7ebf\u8def\u9053\u8def\u62e5\u5835\u60c5\u51b5",permalink:"/ol-echarts/docs/playgrounds/traffic"},next:{title:"\u6625\u8282\u4eba\u53e3\u8fc1\u5f99",permalink:"/ol-echarts/docs/playgrounds/china-migration"}},i={},l=[{value:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",id:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",level:3}];function d(n){const e={code:"code",h3:"h3",pre:"pre",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h3,{id:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",children:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const data = useBaseUrl('/json/tracks.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      stopEvent: false,\n      hideOnMoving: false,\n      hideOnZooming: false,\n      forcedPrecomposeRerender: true,\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        projection: 'EPSG:4326',\n        zoom: 5,\n        rotation: 0,\n        center: [113.53450137499999, 34.44104525],\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    fetch(data).then(res => res.json()).then(res => {\n      const lines = res.map((track) => ({\n        coords: track.map((seg) => seg.coord),\n      }));\n      const option = {\n        title: {\n          text: '\u676d\u5dde\u70ed\u95e8\u6b65\u884c\u8def\u7ebf',\n          left: 'center',\n          textStyle: {\n            color: '#eee',\n          },\n        },\n        backgroundColor: 'transparent',\n        series: [{\n          type: 'lines',\n          data: lines,\n          polyline: true,\n          lineStyle: {\n            normal: {\n              color: '#ddb926',\n              opacity: 0.6,\n              width: 1,\n            },\n          },\n        }],\n      };\n      initChat(map, option);\n    })\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},2036:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>c});var r=t(7378);const o={},s=r.createContext(o);function a(n){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),r.createElement(s.Provider,{value:e},n.children)}}}]);