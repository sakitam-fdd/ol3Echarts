"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[90],{6149:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=t(6106),r=t(2036);const s={id:"traffic",title:"\u5609\u5174\u5e02\u516c\u4ea4\u7ebf\u8def\u9053\u8def\u62e5\u5835\u60c5\u51b5"},i=void 0,a={id:"playgrounds/traffic",title:"\u5609\u5174\u5e02\u516c\u4ea4\u7ebf\u8def\u9053\u8def\u62e5\u5835\u60c5\u51b5",description:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",source:"@site/docs/playgrounds/traffic.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/traffic",permalink:"/ol-echarts/docs/playgrounds/traffic",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/traffic.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730471033e3,frontMatter:{id:"traffic",title:"\u5609\u5174\u5e02\u516c\u4ea4\u7ebf\u8def\u9053\u8def\u62e5\u5835\u60c5\u51b5"},sidebar:"docs",previous:{title:"\u5317\u4eac\u5e02\u516c\u4ea4\u7ebf\u8def",permalink:"/ol-echarts/docs/playgrounds/line-bus"},next:{title:"\u676d\u5dde\u70ed\u95e8\u6b65\u884c\u8def\u7ebf",permalink:"/ol-echarts/docs/playgrounds/track-line"}},c={},l=[{value:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",id:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",level:3}];function p(n){const e={code:"code",h3:"h3",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h3,{id:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b",children:"\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const data = useBaseUrl('/json/traffic.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      stopEvent: false,\n      hideOnMoving: false,\n      hideOnZooming: false,\n      forcedPrecomposeRerender: true,\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        projection: 'EPSG:4326',\n        zoom: 12,\n        rotation: 0,\n        center: [120.76264061813247, 30.74805248565917],\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    function convertData(sourceData) {\n      return [].concat.apply(\n        [],\n        sourceData.map((busLine) => {\n          let prevPoint = null;\n          const points = [];\n          const value = busLine.shift();\n          for (let i = 0; i < busLine.length; i += 2) {\n            let point = [busLine[i], busLine[i + 1]];\n            if (i > 0) {\n              point = [prevPoint[0] + point[0], prevPoint[1] + point[1]];\n            }\n            prevPoint = point;\n            points.push([point[0] / 1e5, point[1] / 1e5]);\n          }\n          return {\n            value,\n            coords: points,\n          };\n        }),\n      );\n    }\n\n    fetch(data).then(res => res.json()).then(res => {\n      const option = {\n        visualMap: {\n          type: 'piecewise',\n          left: 'right',\n          top: 'top',\n          min: 0,\n          max: 15,\n          splitNumber: 5,\n          maxOpen: true,\n          color: ['red', 'yellow', 'green'],\n        },\n        tooltip: {\n          formatter(params) {\n            return `\u62e5\u5835\u6307\u6570:${params.value}`;\n          },\n          trigger: 'item',\n        },\n        series: [\n          {\n            type: 'lines',\n            polyline: true,\n            lineStyle: {\n              normal: {\n                opacity: 1,\n                width: 4,\n              },\n              emphasis: {\n                width: 6,\n              },\n            },\n            effect: {\n              show: true,\n              symbolSize: 2,\n              color: 'white',\n            },\n            data: convertData(res),\n          },\n        ],\n      };\n\n      initChat(map, option);\n    })\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},2036:(n,e,t)=>{t.d(e,{R:()=>i,x:()=>a});var o=t(7378);const r={},s=o.createContext(r);function i(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);