"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[198],{8460:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>i});var o=t(6106),a=t(2036);const r={id:"scatter-charts",title:"\u5168\u56fd\u4e3b\u8981\u57ce\u5e02\u7a7a\u6c14\u8d28\u91cf"},s=void 0,l={id:"playgrounds/scatter-charts",title:"\u5168\u56fd\u4e3b\u8981\u57ce\u5e02\u7a7a\u6c14\u8d28\u91cf",description:"\u793a\u4f8b",source:"@site/docs/playgrounds/scatter-charts.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/scatter-charts",permalink:"/ol3Echarts/docs/playgrounds/scatter-charts",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/scatter-charts.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730645386e3,frontMatter:{id:"scatter-charts",title:"\u5168\u56fd\u4e3b\u8981\u57ce\u5e02\u7a7a\u6c14\u8d28\u91cf"},sidebar:"docs",previous:{title:"Bridger for openlayers and echarts",permalink:"/ol3Echarts/docs/"},next:{title:"\u6a21\u62df\u8fc1\u5f99",permalink:"/ol3Echarts/docs/playgrounds/migration"}},c={},i=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3}];function d(n){const e={code:"code",h3:"h3",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h3,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const data = useBaseUrl('/json/scatter.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      stopEvent: false,\n      hideOnMoving: true,\n      hideOnZooming: true,\n    });\n\n    chart.on('load', (data) => {\n      data.value.on('click', (event) => {\n        console.log('click', event);\n      });\n\n      data.value.on('dblclick', (event) => {\n        console.log('dblclick', event);\n      });\n\n      data.value.on('mousedown', (event) => {\n        console.log('mousedown', event);\n      });\n\n      data.value.on('mousemove', (event) => {\n        console.log('mousemove', event);\n      });\n\n      data.value.on('mouseup', (event) => {\n        console.log('mouseup', event);\n      });\n\n      data.value.on('mouseover', (event) => {\n        console.log('mouseover', event);\n      });\n\n      data.value.on('mouseout', (event) => {\n        console.log('mouseout', event);\n      });\n\n      data.value.on('globalout', (event) => {\n        console.log('globalout', event);\n      });\n\n      data.value.on('contextmenu', (event) => {\n        console.log('contextmenu', event);\n      });\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        center: [113.53450137499999, 34.44104525],\n        projection: 'EPSG:4326',\n        zoom: 5, // resolution\n        rotation: 0,\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://a.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    fetch(data).then(res => res.json()).then(res => {\n      const data = res.locations;\n      const geoCoordMap = res.coordinates;\n      const convertData = (_data) => {\n        const _res = [];\n        for (let i = 0; i < _data.length; i++) {\n          const geoCoord = geoCoordMap[_data[i].name];\n          if (geoCoord) {\n            _res.push({\n              name: _data[i].name,\n              value: geoCoord.concat(_data[i].value),\n            });\n          }\n        }\n        return _res;\n      };\n      const option = {\n        title: {\n          text: '\u5168\u56fd\u4e3b\u8981\u57ce\u5e02\u7a7a\u6c14\u8d28\u91cf',\n          subtext: 'data from PM25.in',\n          sublink: 'http://www.pm25.in',\n          left: 'center',\n          textStyle: {\n            color: '#fff',\n          },\n        },\n        tooltip: {\n          trigger: 'item',\n        },\n        openlayers: {},\n        legend: {\n          orient: 'vertical',\n          y: 'top',\n          x: 'right',\n          data: ['pm2.5'],\n          textStyle: {\n            color: '#fff',\n          },\n        },\n        series: [\n          {\n            name: 'pm2.5',\n            type: 'scatter',\n            data: convertData(data),\n            symbolSize(val) {\n              return val[2] / 10;\n            },\n            label: {\n              normal: {\n                formatter: '{b}',\n                position: 'right',\n                show: false,\n              },\n              emphasis: {\n                show: true,\n              },\n            },\n            itemStyle: {\n              normal: {\n                color: '#ddb926',\n              },\n            },\n          },\n          {\n            name: 'Top 5',\n            type: 'effectScatter',\n            data: convertData(data.sort((\n              a,\n              b,\n            ) => b.value - a.value).slice(0, 6)),\n            symbolSize(val) {\n              return val[2] / 10;\n            },\n            showEffectOn: 'render',\n            rippleEffect: {\n              brushType: 'stroke',\n            },\n            hoverAnimation: true,\n            label: {\n              normal: {\n                formatter: '{b}',\n                position: 'right',\n                show: true,\n              },\n            },\n            itemStyle: {\n              normal: {\n                color: '#f4e925',\n                shadowBlur: 10,\n                shadowColor: '#333',\n              },\n            },\n            zlevel: 1,\n          }],\n      };\n\n      initChat(map, option);\n    })\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},2036:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var o=t(7378);const a={},r=o.createContext(a);function s(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),o.createElement(r.Provider,{value:e},n.children)}}}]);