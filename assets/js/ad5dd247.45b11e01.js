"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[454],{1268:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var a=t(6106),o=t(2036);const r={id:"heatmap",title:"\u70ed\u529b\u56fe"},s=void 0,c={id:"playgrounds/heatmap",title:"\u70ed\u529b\u56fe",description:"\u793a\u4f8b",source:"@site/docs/playgrounds/heatmap.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/heatmap",permalink:"/ol3Echarts/docs/playgrounds/heatmap",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/heatmap.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730645386e3,frontMatter:{id:"heatmap",title:"\u70ed\u529b\u56fe"},sidebar:"docs",previous:{title:"4490\u5750\u6807\u7cfb\u663e\u793a\u6298\u7ebf\u56fe",permalink:"/ol3Echarts/docs/playgrounds/line-with-4490"},next:{title:"\u589e\u91cf\u6e32\u67d3",permalink:"/ol3Echarts/docs/playgrounds/incremental"}},i={},d=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3}];function l(n){const e={code:"code",h3:"h3",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h3,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const dataUrl = useBaseUrl('/json/heatmap.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      hideOnMoving: true,\n      hideOnZooming: true,\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = async () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        projection: 'EPSG:4326',\n        zoom: 5,\n        rotation: 0,\n        center: [113.53450137499999, 34.44104525],\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://{a-c}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    const response = await fetch(dataUrl).then(res => res.json());\n\n    const convertData = (data) => {\n      const res = [];\n      for (let i = 0; i < data.length; i++) {\n        const geoCoord = response.coordinates[data[i].name];\n        if (geoCoord) {\n          res.push(geoCoord.concat(data[i].value));\n        }\n      }\n      return res;\n    };\n    const option = {\n      title: {\n        text: '\u5168\u56fd\u4e3b\u8981\u57ce\u5e02\u7a7a\u6c14\u8d28\u91cf',\n        subtext: 'data from PM25.in',\n        sublink: 'http://www.pm25.in',\n        left: 'center',\n        textStyle: {\n          color: '#fff',\n        },\n      },\n      backgroundColor: 'transparent',\n      visualMap: {\n        min: 0,\n        max: 500,\n        splitNumber: 5,\n        inRange: {\n          color: ['#d94e5d', '#eac736', '#50a3ba'].reverse(),\n        },\n        textStyle: {\n          color: '#fff',\n        },\n      },\n      series: [{\n        name: 'AQI',\n        type: 'heatmap',\n        data: convertData(response.attr),\n      }],\n    };\n\n    initChat(map, option);\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},2036:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>c});var a=t(7378);const o={},r=a.createContext(o);function s(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);