"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[656],{4731:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=t(6106),r=t(2036);const s={id:"lines-tourism",title:"\u6e58\u897f\u65c5\u6e38\u666f\u70b9\u5ba2\u6e90\u5206\u5e03\u56fe_\u57ce\u89c4\u6240"},a=void 0,i={id:"playgrounds/lines-tourism",title:"\u6e58\u897f\u65c5\u6e38\u666f\u70b9\u5ba2\u6e90\u5206\u5e03\u56fe_\u57ce\u89c4\u6240",description:"\u793a\u4f8b",source:"@site/docs/playgrounds/lines-tourism.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/lines-tourism",permalink:"/ol-echarts/docs/playgrounds/lines-tourism",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/lines-tourism.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730645386e3,frontMatter:{id:"lines-tourism",title:"\u6e58\u897f\u65c5\u6e38\u666f\u70b9\u5ba2\u6e90\u5206\u5e03\u56fe_\u57ce\u89c4\u6240"},sidebar:"docs",previous:{title:"\u6625\u8282\u4eba\u53e3\u8fc1\u5f99",permalink:"/ol-echarts/docs/playgrounds/china-migration"},next:{title:"\u5e7f\u5dde\u4eba\u53e3\u8fc1\u5f99",permalink:"/ol-echarts/docs/playgrounds/guangzhou-migration-map"}},c={},l=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3}];function d(n){const e={code:"code",h3:"h3",pre:"pre",...(0,r.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h3,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const dataUrl = useBaseUrl('/json/toursim.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      stopEvent: false,\n      hideOnMoving: false,\n      hideOnZooming: false,\n      forcedPrecomposeRerender: true,\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = async () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        projection: 'EPSG:4326',\n        zoom: 5,\n        rotation: 0,\n        center: [113.53450137499999, 34.44104525],\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://{a-c}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    const data = await fetch(dataUrl).then(res => res.json());\n\n    const option = {\n      backgroundColor: 'transparent',\n      title: {\n        text: '\u6e58\u897f\u65c5\u6e38\u666f\u70b9\u5ba2\u6e90\u5206\u5e03\u56fe_\u57ce\u89c4\u6240',\n        left: 'center',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      legend: {\n        show: false,\n        orient: 'vertical',\n        top: 'top',\n        left: 'right',\n        data: ['\u5730\u70b9', '\u7ebf\u8def'],\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      series: [\n        {\n          name: '\u5730\u70b9',\n          type: 'effectScatter',\n          zlevel: 2,\n          rippleEffect: {\n            brushType: 'stroke'\n          },\n          label: {\n            emphasis: {\n              show: true,\n              position: 'right',\n              formatter: '{b}'\n            }\n          },\n          symbolSize: 2,\n          showEffectOn: 'render',\n          itemStyle: {\n            color: '#46bee9'\n          },\n          data: data.citys\n        },\n        {\n          name: '\u7ebf\u8def',\n          type: 'lines',\n          zlevel: 2,\n          large: true,\n          effect: {\n            show: true,\n            constantSpeed: 30,\n            symbol: 'pin',\n            symbolSize: 3,\n            trailLength: 0,\n          },\n          lineStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0, color: '#58B3CC'\n            }, {\n              offset: 1, color: '#F58158'\n            }], false),\n            width: 1,\n            opacity: 0.2,\n            curveness: 0.1\n          },\n          data: data.moveLines\n        }\n      ]\n    };\n\n    initChat(map, option);\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function p(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},2036:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>i});var o=t(7378);const r={},s=o.createContext(r);function a(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);