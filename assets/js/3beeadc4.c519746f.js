"use strict";(self.webpackChunkol_echarts_docs=self.webpackChunkol_echarts_docs||[]).push([[868],{278:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=e(6106),o=e(2036);const i={id:"wind",title:"\u5168\u7403\u98ce\u5411"},r=void 0,s={id:"playgrounds/wind",title:"\u5168\u7403\u98ce\u5411",description:"\u793a\u4f8b",source:"@site/docs/playgrounds/wind.mdx",sourceDirName:"playgrounds",slug:"/playgrounds/wind",permalink:"/ol3Echarts/docs/playgrounds/wind",draft:!1,unlisted:!1,editUrl:"https://github.com/sakitam-fdd/ol3Echarts/edit/master/documents/docs/docs/playgrounds/wind.mdx",tags:[],version:"current",lastUpdatedBy:"sakitam-fdd",lastUpdatedAt:1730645386e3,frontMatter:{id:"wind",title:"\u5168\u7403\u98ce\u5411"},sidebar:"docs",previous:{title:"\u5fae\u535a\u7b7e\u5230\u6570\u636e\u70b9\u4eae\u4e2d\u56fd-WEBGL",permalink:"/ol3Echarts/docs/playgrounds/weibo-gl"},next:{title:"\u81ea\u5b9a\u4e49\u70b9\u89c6\u56fe",permalink:"/ol3Echarts/docs/playgrounds/point"}},c={},d=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3}];function l(n){const t={code:"code",h3:"h3",pre:"pre",...(0,o.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h3,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:"function render(props) {\n  const container = useRef(null);\n\n  const dataUrl = useBaseUrl('/json/wind.json');\n\n  const initChat = (map, option) => {\n    const chart = new EChartsLayer(option, {\n      stopEvent: false,\n      hideOnMoving: false,\n      hideOnZooming: false,\n      forcedPrecomposeRerender: true,\n    });\n\n    chart.appendTo(map);\n  }\n\n  const init = async () => {\n    const map = new ol.Map({\n      target: container.current,\n      view: new ol.View({\n        projection: 'EPSG:4326',\n        zoom: 5,\n        rotation: 0,\n        center: [113.53450137499999, 34.44104525],\n      }),\n      layers: [\n        new TileLayer({\n          source: new XYZ({\n            url: 'https://{a-c}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\n          }),\n        }),\n      ],\n    });\n\n    const windData = await fetch(dataUrl).then(res => res.json());\n\n    const data = [];\n    let p = 0;\n    let maxMag = 0;\n    let minMag = Infinity;\n    for (let j = 0; j < windData.ny; j++) {\n      for (let i = 0; i < windData.nx; i++, p++) {\n        const vx = windData.data[p][0];\n        const vy = windData.data[p][1];\n        const mag = Math.sqrt(vx * vx + vy * vy);\n        // \u6570\u636e\u662f\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\n        // [ [\u7ecf\u5ea6, \u7ef4\u5ea6\uff0c\u5411\u91cf\u7ecf\u5ea6\u65b9\u5411\u7684\u503c\uff0c\u5411\u91cf\u7ef4\u5ea6\u65b9\u5411\u7684\u503c] ]\n        data.push([\n          i / windData.nx * 360 - 180,\n          j / windData.ny * 180 - 90,\n          vx,\n          vy,\n          mag\n        ]);\n        maxMag = Math.max(mag, maxMag);\n        minMag = Math.min(mag, minMag);\n      }\n    }\n\n    const option = {\n      title: {\n        text: '\u98ce\u573a',\n        left: 'center',\n        top: 'top',\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      visualMap: {\n        left: 'left',\n        min: minMag,\n        max: maxMag,\n        dimension: 4,\n        inRange: {\n          // color: ['green', 'yellow', 'red']\n          color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n        },\n        realtime: false,\n        calculable: true,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      series: [\n        {\n          type: 'flowGL',\n          data: data,\n          particleDensity: 64,\n          particleSpeed: 2,\n          particleSize: 1,\n          gridWidth: windData.nx,\n          gridHeight: windData.ny,\n          itemStyle: {\n            opacity: 0.7\n          }\n        }\n      ]\n    };\n\n    initChat(map, option);\n\n    function resize(target) {}\n\n    return {\n      resize,\n    }\n  }\n\n  useEffect(() => {\n    const { resize } = init();\n\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"live-wrap\">\n      <div ref={container} className=\"map-content\" />\n    </div>\n  );\n}\n"})})]})}function p(n={}){const{wrapper:t}={...(0,o.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},2036:(n,t,e)=>{e.d(t,{R:()=>r,x:()=>s});var a=e(7378);const o={},i=a.createContext(o);function r(n){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function s(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(i.Provider,{value:t},n.children)}}}]);